<script type="text/javascript">
	$(document).ready(function() {
		function validateSubmit() {
			var submitAppointmentElement = $('#appointment_submit');
			var selectDoctorsElement = $('#appointment_doctor_id');
			if (selectDoctorsElement.val()) {
				submitAppointmentElement.attr('disabled', false);
			} else {
				submitAppointmentElement.attr('disabled', true);
			}
		}

		var date = new Date();
		var d = date.getDate();
		var m = date.getMonth();
		var y = date.getFullYear();
		var withDoctorIdString = '<% if params[:doctor_id] %>?doctor_id=<%=params[:doctor_id]%><% end %>';
		var datebookId = '<%= @datebook.id %>';
		var endpointURL = "/datebooks/" + datebookId + "/appointments";

		// Helper to inject the progress bar inside the calendar just above .fc-content
		function injectProgressBar() {
			var $calendar = $('#calendar');
			if ($calendar.length && $calendar.find('#calendar-progress-bar').length === 0) {
				var $content = $calendar.find('.fc-content').first();
				if ($content.length) {
					$('<div class="calendar-refresh-progress"><div class="calendar-refresh-progress-bar" id="calendar-progress-bar"></div></div>').insertBefore($content);
					// Rebind the progressBar reference in case of re-render
					progressBar = document.getElementById('calendar-progress-bar');
				}
			}
		}

		$("#calendar").fullCalendar({
			defaultView: <% if @is_mobile.nil? %>"agendaWeek"<%else%>"agendaDay"<% end %>,
			minTime: <%= @datebook.starts_at %>,
			maxTime: <%= @datebook.ends_at %>,
			firstDay: 1,
			<% if @is_mobile.nil? %>
				header: {
					left: "month,agendaWeek,agendaDay",
					center: "title",
					right: "prev,next today"
				},
			<% else %>
				header: {
					left: "prev,next today",
					center: "",
					right: ""
				},
			<% end %>
			monthNames: <%= raw (t "date.month_names").last(12) %>,
			monthNamesShort: <%= raw (t "date.abbr_month_names").last(12) %>,
			dayNames: <%= raw (t "date.day_names").last(7) %>,
			dayNamesShort: <%= raw (t "date.abbr_day_names").last(7) %>,
			buttonText: {
			    prev:     '&nbsp;&#9668;&nbsp;',  // left triangle
			    next:     '&nbsp;&#9658;&nbsp;',  // right triangle
			    prevYear: '&nbsp;&lt;&lt;&nbsp;', // <<
			    nextYear: '&nbsp;&gt;&gt;&nbsp;', // >>
			    today:    '<%= t :today %>',
			    month:    '<%= t :month %>',
			    week:     '<%= t :week %>',
			    day:      '<%= t :day %>'
			},
			editable: true,
			viewDisplay: function(view) {
				resizeCalendar(view);
				injectProgressBar();
			},
			eventSources: [{
				url: endpointURL + withDoctorIdString,
				ignoreTimezone: true
			}],
			allDaySlot: false,
			allDayDefault: false,
			dayClick: function(dayDate, allDay, jsEvent, view){
				if (view.name != "month"){
					var url = endpointURL + '/new';
					var timestamp = Math.round((dayDate).getTime() / 1000);

					$.get(url, {"starts_at": timestamp}, function(data) {
						$('.modal-title').html($.fullCalendar.formatDate(dayDate, "dd, MMMM · hh:mm tt"));
						$('.body-container').html(data);
						$("#modal-appointment").modal("toggle");
						validateSubmit();
					});
				} else {
					$("#calendar").fullCalendar('changeView', 'agendaDay');
					$("#calendar").fullCalendar('gotoDate', dayDate);
				}

			},
      
			eventClick: function(calEvent, jsEvent, view) {
				const url = endpointURL + '/' + calEvent.id + "/edit?patient_id=" + calEvent.patient_id;

				$.get(url, function(data) {
					$('.modal-title').html($.fullCalendar.formatDate(calEvent.start, "dd, MMMM · hh:mm tt"));
	    			$('.body-container').html(data);
					$("#modal-appointment").modal("toggle");
					validateSubmit();
				});
			},

			eventDrop: function(event, dayDelta, minuteDelta, allDay, revertFunc){
				// Show confirmation modal before updating
				if (confirm('<%= t(:confirm_reschedule) %>')) {
					//update the event with the new data
					$.ajax({
							type: "PUT",
							url: endpointURL + "/" + event.id,
							data: {
								"appointment[starts_at]": event.start,
								"appointment[ends_at]": event.end
								}
					});
				} else {
					revertFunc(); // Revert the event if user cancels
				}
			},
			eventResize: function(calEvent, dayDelta, minuteDelta, revertFunc, jsEvent, ui, view) {
				// Show confirmation modal before updating
				if (confirm('<%= t(:confirm_resize) %>')) {
					// update the event with the new data
					$.ajax({
						type: "PUT",
						url: endpointURL + "/" + calEvent.id,
						data: {
							"appointment[starts_at]": calEvent.start,
							"appointment[ends_at]": calEvent.end,
							}
					});
				} else {
					revertFunc(); // Revert the event if user cancels
				}
			},
			eventAfterRender: function(event, element, view) {
				var patientDisplay = event.firstname + " " + event.lastname;
				if (event.patient_uid) {
					patientDisplay += " (" + event.patient_uid + ")";
				}
				element.find('.fc-event-time').append(" " + patientDisplay);
				// Add touch dragging to event element
				element.addTouch();
     	}
		});

    $('#modal-appointment').on('show.bs.modal', function (event) {
      var el;
    	window.TomSelect && (new TomSelect(el = document.getElementById('appointment_doctor_id'), {
    		copyClassesToDropdown: false,
    		dropdownClass: 'dropdown-menu',
    		optionClass:'dropdown-item',
    		controlInput: '<input>',
    		render:{
    			item: function(data,escape) {
    				if( data.customProperties ){
    					return '<div><span class="dropdown-item-indicator">' + data.customProperties + '</span>' + escape(data.text) + '</div>';
    				}
    				return '<div>' + escape(data.text) + '</div>';
    			},
    			option: function(data,escape){
    				if( data.customProperties ){
    					return '<div><span class="dropdown-item-indicator">' + data.customProperties + '</span>' + escape(data.text) + '</div>';
    				}
    				return '<div>' + escape(data.text) + '</div>';
    			},
    		},
    	}));
    });

		function resizeCalendar(calendarView) {
			if(calendarView.name === 'agendaWeek' || calendarView.name === 'agendaDay') {
				// if height is too big for these views, then scrollbars will be hidden
				calendarView.setHeight(9999);
			}
		}

		// Inject the progress bar inside the calendar (initial load)
		injectProgressBar();

		// Calendar auto-refresh functionality with progress indicator
		var refreshInterval = 45_000; 
		var progressUpdateInterval = 100; 
		var refreshTimer;
		var progressTimer;
		var progressBar = document.getElementById('calendar-progress-bar');

		function startRefreshCycle() {
			var startTime = Date.now();
			
			// Reset progress bar
			progressBar.style.width = '0%';
			progressBar.style.transitionDuration = '0s';
			
			// Start progress animation
			progressTimer = setInterval(function() {
				var elapsed = Date.now() - startTime;
				var progress = (elapsed / refreshInterval) * 100;
				
				if (progress <= 100) {
					progressBar.style.width = progress + '%';
				}
			}, progressUpdateInterval);
			
			// Set refresh timer
			refreshTimer = setTimeout(function() {
				// Clear progress timer
				clearInterval(progressTimer);
				
				// Refresh calendar events using FullCalendar's built-in method
				$("#calendar").fullCalendar("refetchEvents");
				
				// Reset and start next cycle
				startRefreshCycle();
			}, refreshInterval);
		}

		// Start the auto-refresh cycle
		startRefreshCycle();

		// Pause auto-refresh when user is interacting with the calendar
		var userActivityTimeout;
		function pauseRefreshOnActivity() {
			clearTimeout(refreshTimer);
			clearInterval(progressTimer);
			clearTimeout(userActivityTimeout);
			
			// Resume after 5 seconds of inactivity
			userActivityTimeout = setTimeout(function() {
				startRefreshCycle();
			}, 5000);
		}

		// Attach activity listeners to calendar events
		$("#calendar").on('mousedown touchstart', pauseRefreshOnActivity);
	});
</script>

<!-- Page title -->
<div class="page-header d-print-none">
	<div class="row">
		<div class="col">
			<div id="calendar"></div>

			<div class="row row-cards mt-2">
				<div class="col-md-6 col-xl-3">
					<a href="/" class="card card-link">
						<div class="card-body">
						<div class="row">
							<div class="col-auto">
							<span class="avatar rounded-circle">∞</span>
							</div>
							<div class="col">
							<div class="font-weight-medium"><%= t :everyone %></div>
							<div class="text-muted"><%= t :all_appointments %></div>
							</div>
						</div>
						</div>
					</a>
				</div>

				<% @doctors.each do |doctor| %>
					<div class="col-md-6 col-xl-3">
						<a href="?doctor_id=<%=doctor.id%>" class="card card-link <%= @filtered_by.to_i == doctor.id ? 'bg-azure-lt' : ''%>">
						<div class="card-body">
						<div class="row">
							<div class="col-auto">
							<span class="avatar rounded-circle">
												<%= doctor.initials %>
								<span class="badge" style="background-color: <%= doctor.color %>"></span>
							</span>
							</div>
						<div class="col">
							<div class="font-weight-medium">
							<%= doctor.fullname %>
							</div>
							<div class="text-muted">
							<%= doctor.speciality.blank? ? "—" : doctor.speciality %>
							</div>
						</div>
						</div>
						</div>
						</a>
					</div>
				<% end %>
			</div>

		</div>
	</div>
</div>

<div class="modal fade" id="modal-appointment" tabindex="-1" role="dialog" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title"><%= t :please_wait %></h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="body-container">
          <%= t :please_wait %>
        </div>
      </div>
    </div>
  </div>
</div>